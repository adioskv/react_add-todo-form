{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/services/getUserById.ts","components/services/getUniqueId.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUserById","usersFromServer","find","getUniqueId","Math","max","TodoForm","addToDo","useState","setTitle","titleError","setTitleError","userId","setUserId","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","replace","type","placeholder","value","onChange","target","disabled","todosWithUsers","App","setToDos","prevToDos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f4bcbb3.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User | null,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { ToDo } from '../../types/ToDo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: ToDo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { ToDo } from '../../types/ToDo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: ToDo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\nexport const getUserById = (id: number) => {\n  return usersFromServer.find(user => user.id === id) || null;\n};\n","import { ToDo } from '../../types/ToDo';\n\nexport const getUniqueId = (todos: ToDo[]) => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n","import { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { ToDo } from '../../types/ToDo';\nimport { getUserById } from '../services/getUserById';\nimport { getUniqueId } from '../services/getUniqueId';\n\ninterface Props {\n  addToDo: (todo: ToDo) => void,\n  todos: ToDo[],\n}\n\nexport const TodoForm: React.FC<Props> = ({ addToDo, todos }) => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserIdError(!userId);\n\n    if ((title && userId)) {\n      addToDo({\n        title: title.replace(/[^0-9 а-яА-Я a-zA-Z Єє Іі Її \\s]/g, ''),\n        completed: false,\n        userId,\n        id: getUniqueId(todos),\n        user: getUserById(userId) || null,\n      });\n\n      setUserId(0);\n      setTitle('');\n    }\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {titleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersFromServer.map(\n            user => <option value={user.id}>{user.name}</option>,\n          )}\n        </select>\n\n        {userIdError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport { ToDo } from './types/ToDo';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { getUserById } from './components/services/getUserById';\n\nconst todosWithUsers = todosFromServer.map(todo => (\n  { ...todo, user: getUserById(todo.userId) }\n));\n\nexport const App = () => {\n  const [todos, setToDos] = useState<ToDo[]>(todosWithUsers);\n\n  const addToDo = (todo: ToDo) => {\n    setToDos(prevToDos => [...prevToDos, todo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm addToDo={addToDo} todos={todos} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import { ToDo } from '../types/ToDo';\n\nexport default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n] as ToDo[];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}